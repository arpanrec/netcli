#!/usr/bin/env bash
set -euo pipefail

NETCLI_VERSION="${NETCLI_VERSION:-"DEVEL"}"
NETCLI_WEB_RUN_SHA256_FILE_PATH=/tmp/netcli-${NETCLI_VERSION}.sha256

echo "Building netcli version: ${NETCLI_VERSION}"

echo "Clean up the go cache and build directory"
go clean -cache -modcache -i -r
rm -rf build

echo "Recreating the build directory"
mkdir -p build

echo "Writing version to assets/static/Version.txt"
tee assets/static/Version.txt <<EOF >/dev/null
${NETCLI_VERSION}
// DO NOT EDIT
// Managed by: .github/files/build.sh
// This file is automatically generated by the build.sh script in GitHub Actions
// The first line contains the version of the netcli. It has to be the first line of the file.
EOF

echo "Building web run script, because who doesn't love to run a untested script from the internet"
tee "build/netcli-web-run-${NETCLI_VERSION}.sh" <<EOF >/dev/null
#!/usr/bin/env bash
set -euo pipefail

NETCLI_WEB_RUN_BIN_NAME=netcli-${NETCLI_VERSION}-\$(uname -s)-\$(uname -m)
NETCLI_WEB_RUN_VERSION_BIN_PATH=/tmp/\${NETCLI_WEB_RUN_BIN_NAME}
NETCLI_WEB_RUN_SHA256_NAME=netcli-${NETCLI_VERSION}.sha256
NETCLI_WEB_RUN_SHA256_FILE_PATH=/tmp/\${NETCLI_WEB_RUN_SHA256_NAME}

if [ ! -f "\${NETCLI_WEB_RUN_VERSION_BIN_PATH}" ]; then
    curl -L -o "\${NETCLI_WEB_RUN_VERSION_BIN_PATH}" "https://github.com/arpanrec/netcli/releases/download/${NETCLI_VERSION}/\${NETCLI_WEB_RUN_BIN_NAME}"
fi

if [ ! -f "\${NETCLI_WEB_RUN_SHA256_FILE_PATH}" ]; then
    curl -L -o "${NETCLI_WEB_RUN_SHA256_FILE_PATH}" "https://github.com/arpanrec/netcli/releases/download/${NETCLI_VERSION}/\${NETCLI_WEB_RUN_SHA256_NAME}"
fi

cd /tmp || exit 1

if ! sha256sum -c "\${NETCLI_WEB_RUN_SHA256_FILE_PATH}" --ignore-missing --status; then
    echo "SHA256 mismatch, deleting existing file: \${NETCLI_WEB_RUN_VERSION_BIN_PATH}", "\${NETCLI_WEB_RUN_SHA256_FILE_PATH}"
    rm -f "\${NETCLI_WEB_RUN_VERSION_BIN_PATH}" "\${NETCLI_WEB_RUN_SHA256_FILE_PATH}"
    exit 1
fi

chmod +x "\${NETCLI_WEB_RUN_VERSION_BIN_PATH}"
\${NETCLI_WEB_RUN_VERSION_BIN_PATH} "\${@}"
EOF

echo "Writing web-run.sh"
tee web-run.sh <<EOF >/dev/null
#!/usr/bin/env bash
set -euo pipefail
bash <(curl -sSL https://github.com/arpanrec/netcli/releases/download/${NETCLI_VERSION}/netcli-web-run-${NETCLI_VERSION}.sh) "\${@}"
EOF

echo "Generating docs"
go run ./main.go gendocs
# env GOOS= GOARCH= go build -o build/netcli-"${NETCLI_VERSION}"-$(uname -s)-$(uname -m)

echo "Building netcli for different platforms"
env GOOS=linux GOARCH=arm64 go build -o build/netcli-"${NETCLI_VERSION}"-Linux-aarch64
env GOOS=linux GOARCH=amd64 go build -o build/netcli-"${NETCLI_VERSION}"-Linux-x86_64

cd build || exit 1

sha256sum netcli-"${NETCLI_VERSION}"-Linux-aarch64 | tee -a netcli-"${NETCLI_VERSION}".sha256
sha256sum netcli-"${NETCLI_VERSION}"-Linux-x86_64 | tee -a netcli-"${NETCLI_VERSION}".sha256
